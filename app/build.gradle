apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.2'
}

android.testOptions {

    unitTests.all {

        jacoco {
            includeNoLocationClasses = false
        }
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    description = 'Generate JaCoCo coverage reports'
    group       = 'Reporting'

    reports {
        xml.enabled = true
        html.enabled = true
        html.destination file("${buildDir}/jacocoHtml")
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(
            dir: project.projectDir,
            include: ['**/*.exec', '**/*.ec'
            ])
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "android.andela.com.kenyajavadevs"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "android.andela.com.kenyajavadevs.ExampleTestRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true

            buildConfigField "String", "GITHUB_TOKEN", "\"${System.getenv('API_TOKEN')}\""
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.mikhaellopez:circularimageview:$rootProject.circularImageViewVersion"

    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    implementation ("com.squareup.picasso:picasso:$rootProject.picassoVersion") {
        exclude group: 'com.android.support'
        exclude module: ['exifinterface', 'support-annotations']
    }

    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.testRunnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.testRunnerVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.linkedin.testbutler:test-butler-library:$rootProject.testButlerVersion"
}
